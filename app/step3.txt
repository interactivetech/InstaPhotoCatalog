Goal: add full text search
     end-to-end text, stayig with the app, keeps an eye on iy, and quickly detects regressions

     - with the <input> tag: angular will bind the name of the input box (query)
       to a variable of the name name in the data model and keeps the two in sync

     - the data that the user types into the input box is immediately available as a filter input in the list repeater
     (... filter: query), when changes to the data model cause the repeater's input to change, the repeater effeciently
     updates the DOM to reflect the current state of the model

     filter function uses the query to create a new array that contains only those records that match the query
     value to create a new array that contains only those records that match the query

     ngRepeat automatically updates the view in response to the charging numbers of phones returned by the "filter" filter
     The process is completely transparent to the developer


    Filter Detail:

    {{ filter_expression | filter : expression : comparator}}

    expression can be:
    * A String
    - used for matching against the contents of the array.
      All strings or objects with string properties{a:"Apple", b:"Boom"} in array that match this string will be returned.
      Can you ! symbol to negate the search, e.g. return all that does not contain this string : !string

    * An Object:
    pattern object can be used to filter specific properties on objects contained by array
    {name:"M"} will return an array of items which have property name containing "M"
    e.g. {name:"M", phone:"1"} : will return an array of items which have property name containing "M" and property phone containing "1"
    {name: "!M"} predicate will return an array of items which have property name not containing "M".

    NOTE: named property will match properties on the same level only,
    while the special $ property will match properties on the same level or deeper.

    E.g. an array item like {name: {first: 'John', last: 'Doe'}} will not be matched by {name: 'John'},
            but will be matched by {$: 'John'}.

Experiment:

want to bind to the query model from the <title> element,
you must move the ngController declaration to the HTML element because
 it is the common parent of both the body and title elements:

Curly braces show before displaying value because the html is displayed before, use
 ngBindTemplate directives, which are invisible to the user while the page is loading:

 lookup to and egghead.io videos to learn how to make own filter functions


     TO DO:

     Complete TEST Section,

